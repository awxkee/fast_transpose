name: "Build"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - '*'
      - '!ci_test_*'
    tags-ignore:
      - '*'
  pull_request:
    branches:
      - '*'
      - '!ci_test_*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup target add aarch64-unknown-linux-gnu x86_64-unknown-linux-gnu i686-unknown-linux-gnu powerpc-unknown-linux-gnu armv7-unknown-linux-gnueabi
      - run: RUSTFLAGS="-C target-feature=+neon" cargo build --target aarch64-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+sse4.1" cargo build --target i686-unknown-linux-gnu
      - run: cargo build --target powerpc-unknown-linux-gnu
      - run: RUSTFLAGS="-C target-feature=+avx2,+f16c" cargo build --target x86_64-unknown-linux-gnu
      - run: cargo build --target armv7-unknown-linux-gnueabi

  clippy_x86:
    name: Clippy x86 Stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy -- -D warnings

  clippy_x86_nightly:
    name: Clippy x86 Nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup component add clippy
      - run: cargo clippy --all-targets --all-features -- -D warnings

  clippy_arm:
    name: Clippy ARM
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy -- -D warnings

  fuzz:
    name: Fuzzing
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install cargo-fuzz
      - run: cargo fuzz run plane8 -- -max_total_time=15
      - run: cargo fuzz run cbcr8 -- -max_total_time=15
      - run: cargo fuzz run rgba8 -- -max_total_time=15
      - run: cargo fuzz run plane16 -- -max_total_time=15
